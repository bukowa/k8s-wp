image:
  wordpress: wordpress:6.0.3-php7.4-apache
  database: mariadb:10.9.3
  wpcli: bukowa/test:provisioner

web:
  host: wp.doma

script:
  - wp plugin delete hello || true
  - wp plugin delete akismet || true
  - wp theme delete twentytwenty || true
  - wp theme delete twentytwentyone || true
  - wp theme delete twentytwentytwo || true
  - wp theme delete twentytwentythree || true
  - wp rewrite structure '/%category%/%postname%/'
  - composer plugins:activate

volumes:

  html:
    emptyDir: {}

  plugins:
    emptyDir: {}

  themes:
    emptyDir: {}

volumeMounts:

  html:
    wordpress:
      mountPath: /var/www/html
      subPath: '{{ include "wordpress.fullname" . }}/var/www/html'
    cli:
      mountPath: /var/www/html
      subPath: '{{ include "wordpress.fullname" . }}/var/www/html'
    database:
      mountPath: /var/lib/mysql
      subPath: '{{ include "wordpress.fullname" . }}/var/lib/mysql'

  themes:
    chownrepos:
      mountPath: /repos/themes
    gitcloner:
      mountPath: /repos/themes

  plugins:
    chownrepos:
      mountPath: /repos/plugins
    gitcloner:
      mountPath: /repos/plugins

database:
  user: "example"
  password: "example"
  name: "example"
  rootPassword: "example"

# each file ownership is set to root:root
# unless securityContext; runAsGroup and runAsUser is used
# from docs;
# By default, Kubernetes recursively changes ownership and permissions
# for the contents of each volume to match the fsGroup specified in a
# Pod's securityContext when that volume is mounted.

# for reff
# https://github.com/kubernetes/kubernetes/issues/81089
# https://stackoverflow.com/questions/49945437/changing-default-file-owner-and-group-owner-of-kubernetes-secrets-files-mounted

# using dict instead of list allows us to override each entry
files:
  # name of the Volume & data key in ConfigMap
  # name of this key doesn't matter other than providing unique name
  user-ini:
    filemode: "0444"
    content: |
        upload_max_filesize = 5000M
        post_max_size = 5000M
        cgi.fix_pathinfo = 0
        memory_limit = 128M
    containers:
      wordpress:
        - mountPath: "/usr/local/etc/php/conf.d/user.ini"

  mpm-prefork:
    filemode: "0444"
    containers:
      wordpress:
        - mountPath: "/etc/apache2/mods-enabled/mpm_prefork.conf"
    content: |
      <IfModule mpm_prefork_module>
      StartServers		2
      MinSpareServers	2
      MaxSpareServers	4
      MaxRequestWorkers	16
      MaxConnectionsPerChild  2
      </IfModule>

  docker-cnf:
    filemode: "0444"
    containers:
      database:
        - mountPath: /etc/mysql/conf.d/docker.cnf
    content: |
      [mysqld]
      # default_authentication_plugin=mysql_native_password
      skip-host-cache
      skip-name-resolve
  
      # copied for  testing from https://dba.stackexchange.com/questions/64055/how-to-reduce-mysql-memory-used
  
      innodb_buffer_pool_size=5M
      innodb_log_buffer_size=256K
      query_cache_size=0
      max_connections=10
      key_buffer_size=8
      thread_cache_size=0
      host_cache_size=0
      innodb_ft_cache_size=1600000
      innodb_ft_total_cache_size=32000000
  
      # per thread or per operation settings
      # this crashes mariadb
      #thread_stack=131072
      sort_buffer_size=32K
      read_buffer_size=8200
      read_rnd_buffer_size=8200
      max_heap_table_size=16K
      tmp_table_size=1K
      bulk_insert_buffer_size=0
      join_buffer_size=128
      net_buffer_length=1K
      innodb_sort_buffer_size=64K
  
      #settings that relate to the binary log (if enabled)
      binlog_cache_size=4K
      binlog_stmt_cache_size=4K

  composer-json:
    filemode: "0444"
    containers:
      cli:
        - mountPath: /var/www/html/composer.json
    content: |
      {
        "name": "bukowa/k8s-wp"
      }

ftp:
  enabled: false
  login: test
  password: test
